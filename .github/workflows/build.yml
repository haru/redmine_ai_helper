name: build
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  build:
    runs-on: ubuntu-latest
    # Supported Matrix:
    # Redmine 6.0-stable: Ruby 3.1, 3.2, 3.3
    # Redmine 6.1-stable: Ruby 3.2, 3.3, 3.4
    # Redmine master: Ruby 3.2, 3.3, 3.4
    strategy:
      max-parallel: 10
      matrix:
        db: [sqlite3, mysql, postgres]
        ruby_version: ["3.1", "3.2", "3.3", "3.4"]
        redmine_version: [6.0-stable, 6.1-stable, master]
        exclude:
          - ruby_version: "3.4"
            redmine_version: 6.0-stable
          - ruby_version: "3.1"
            redmine_version: 6.1-stable
          - ruby_version: "3.1"
            redmine_version: master
    services:
      mysql:
        image: mysql:9.4
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        env:
          MYSQL_ROOT_PASSWORD: dbpassword
      postgres:
        image: postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: dbpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    container:
      image: ruby:${{ matrix.ruby_version }}
      env:
        DB: ${{ matrix.db }}
        DB_USERNAME: root
        DB_PASSWORD: dbpassword
        DB_HOST: ${{ matrix.db }}
        REDMINE_VER: ${{ matrix.redmine_version }}
    steps:
      - uses: actions/checkout@v5
      - name: Install
        run: bash -x ./.github/build-scripts/install.sh
      - name: Build
        run: bash -x ./.github/build-scripts/build.sh
      - name: Enforce YARD Documentation Coverage
        run: |
          output=$(bundle exec yard stats --list-undoc | tee /dev/stderr)
          if ! printf '%s' "$output" | grep -q "100.00%"; then
            echo "YARD documentation coverage is below 100%. See report above." >&2
            exit 1
          fi
      - name: Clean
        run: bash -x ./.github/build-scripts/cleanup.sh
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_CHANNEL: general
          SLACK_TITLE: Test Failure
          SLACK_COLOR: danger
